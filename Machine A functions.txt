	virtual bool acceptMoney(int index) /*override*/
	{

		int purchase, change_amount, numberD;
		int totalInput;
		purchase = items[index].price;
		bool valid;
		cout << "Please insert your money ---> " << endl;
		cin >> numberD;
		if (numberD == 0)
		{
			cout << "You choose to cancle your selection. \n";
			return false;
		}
		totalInput = numberD;
		while (numberD != 0)
		{
			cin >> numberD;
			totalInput += numberD;
		}
		
		change_amount = totalInput - purchase;
		cout << "Processing your purchase ..." << endl;
		cout << currentBalance << endl;
		cout << change_amount << endl;
		if (currentBalance >= (static_cast<double>(change_amount) / 100))
		{
			valid = makeChangesOfdollar(change_amount, currentCoin, change);
			cout << "Your change of " << change_amount << " cents is given as: " << endl;
			printCoin(change);
			transactions++;
			items[index].currentQuantity--;
			currentDollars += totalInput/100;
			totalCost += (static_cast<double>(purchase)/100);
			currentBalance = currentBalance - (static_cast<double>(change_amount) / 100);
			cout << currentBalance << endl;
			/*count++;
			countDollar++;*/
			return true;
		}
		else
		{
			cout << "Insufficient changes! " << endl;
			cout << "Your transaction cannot be processed. " << endl;
			cout << "Please take back your dollar bill. " << endl;
			return false;
		}
	}

	bool makeChangesOfdollar(int amount, Coins &machine, Coins &back)
	{
		bool valid = true;
		int total1, total2;
		back.quarters = 0;
		back.dimes = 0;
		back.nickels = 0;
		if (machine.quarters > 0)
		{
			// Calculate the quarters

			// Calculate the dimes
			if (machine.dimes > 0 && machine.nickels > 0)
			{
				back.quarters = amount / 25;
				total1 = amount - (back.quarters * 25);
				back.dimes = total1 / 10;
				total2 = total1 - (back.dimes * 10);
				// Calculate the nickels
				back.nickels = total2 / 5;
				machine.dimes -= back.dimes;
				machine.nickels -= back.nickels;
				machine.quarters -= back.quarters;
			}
			else if (machine.dimes > 0 && machine.nickels <= 0)
			{
				back.dimes = (amount / 10) - 2;
				total1 = amount - (back.dimes * 10);
				back.quarters = total1 / 25;
				machine.dimes -= back.dimes;
				machine.quarters -= back.quarters;
			}
		}
		else
		{
			if (machine.dimes > 0)
			{
				// Calculate the dimes
				back.dimes = amount / 10;
				total1 = amount - (back.dimes * 10);
				// Calculate the nickels
				back.nickels = total1 / 5;
				machine.dimes -= back.dimes;
				machine.nickels -= back.nickels;
			}
			else
			{
				if (machine.nickels > 0)
				{
					// Calculate the nickels
					back.nickels = amount / 5;
					machine.nickels -= back.nickels;
				}
				else
				{
					cout << "We run out the quarters, dimes, and nickels." << endl;
				}
			}

		}
		return valid;
	}

	void printCoin(Coins c)
	{
		cout << "    Quarters:   " << c.quarters << endl;
		cout << "    Dimes:      " << c.dimes << endl;
		cout << "    Nickels:    " << c.nickels << endl << endl;
	}